{"version":3,"sources":["pages/White.js","pages/Blue.js","App.js","reportWebVitals.js","index.js"],"names":["White","className","width","height","id","Blue","App","useState","imgArr","setImgArr","white","blue","color","setColor","image","setImage","alt","setAlt","text","setText","mode23","setMode","canvas","ctx","img","Image","useEffect","axios","get","then","res","data","drawImageOnCanvas","drawImage","resetSelectElement","selecElements","document","getElementsByClassName","selectedIndex","textOnChange","debounce","t","changeText","getElementById","getContext","clearRect","textAlign","font","fillStyle","fillText","pathname","window","location","to","onClick","value","onChange","e","imgInd","target","length","name","onload","src","map","index","type","autoComplete","placeholder","modeInd","classList","remove","add","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0ec5ec98.chunk.js","sourcesContent":["function White() {\r\n    return (\r\n        <div className=\"imageBox\">\r\n            <canvas width=\"640\" height=\"360\" id=\"myCanvas\" className=\"white\"></canvas>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default White;","function Blue() {\r\n    return (\r\n        <div className=\"imageBox\">\r\n            <canvas width=\"640\" height=\"360\" id=\"myCanvas\" className=\"blue\"></canvas>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blue;","import './App.css';\nimport { Route, BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport White from './pages/White';\nimport Blue from './pages/Blue';\nimport { useState, useEffect } from 'react';\nimport { debounce } from \"lodash\";\nimport axios from 'axios';\n\nfunction App() {\n\n  const [imgArr, setImgArr] = useState(null);\n  const [color, setColor] = useState({\n    white: false,\n    blue: false,\n  });\n  var [image, setImage] = useState(\"\");\n  var [alt, setAlt] = useState(\"\");\n  var [text, setText] = useState(\"\");\n  var [mode23, setMode] = useState(false);\n  var canvas = null;\n  var ctx = null;\n  var img = new Image();\n\n  useEffect(() => {\n    axios.get(\"/presenters.json\")\n      .then(res => {\n        setImgArr(res.data);\n      })\n  }, []);\n\n  function navClickWhite() {\n    if (!color.white) {\n      setColor({\n        white: true,\n        blue: false,\n      });\n\n      setImage(\"\");\n      setMode(false);\n      setAlt(\"\");\n      setText(\"\");\n      document.getElementById(\"input\").value = \"\";\n      resetSelectElement();\n    }\n  }\n\n  function navClickBlue() {\n    if (!color.blue) {\n      setColor({\n        white: false,\n        blue: true,\n      })\n\n      setImage(\"\");\n      setMode(false);\n      setAlt(\"\");\n      setText(\"\");\n      document.getElementById(\"input\").value = \"\";\n      resetSelectElement();\n    }\n  }\n\n  function clickImage(imgInd) {\n    if (imgInd < imgArr.length && imgInd >= 0) {\n      image = (imgArr[imgInd].value);\n      alt = (imgArr[imgInd].name);\n    }\n\n    canvas = document.getElementById(\"myCanvas\");\n    if (canvas) {\n      ctx = canvas.getContext('2d');\n      img.onload = () => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        drawImageOnCanvas();\n        if (text !== \"\") {\n          changeText(text);\n        }\n      }\n      img.src = image;\n      img.alt = alt;\n    }\n  }\n\n  const drawImageOnCanvas = () => {\n    if (!mode23) {\n      ctx.drawImage(img, 0, 0, 640, 360);\n    }\n    else {\n      ctx.drawImage(img, -215, 0, 640, 360);\n    }\n  }\n\n  function resetSelectElement() {\n    let selecElements = document.getElementsByClassName(\"mySelect\");\n    if (selecElements[0].selectedIndex !== 0) {\n      selecElements[0].selectedIndex = 0;\n    }\n    selecElements[1].selectedIndex = \"0\";\n\n  }\n\n  function clickMode(modeInd) {\n    if (modeInd === \"0\") {\n      mode23 = false;\n      canvas.classList.remove('canvas23');\n      changeText(text);\n    };\n    if (modeInd === \"1\") {\n      mode23 = true;\n      canvas.classList.add('canvas23');\n      changeText(text);\n    };\n  }\n\n  const textOnChange = debounce(t => {\n    changeText(t);\n  }, 500);\n\n  const changeText = t => {\n    if (!canvas) {\n      canvas = document.getElementById(\"myCanvas\");\n      ctx = canvas.getContext('2d');\n    }\n    if (canvas) {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      drawImageOnCanvas();\n\n      ctx.textAlign = \"center\";\n      ctx.font = \"50px Inter\";\n      if (!mode23) {\n        ctx.fillStyle = \"white\";\n        ctx.fillText(t, 320, 180);\n      }\n      else {\n        ctx.fillStyle = \"black\";\n        ctx.fillText(t, 530, 180);\n      }\n      text = t;\n    }\n  }\n\n  const pathname = window.location.pathname;\n\n  return (\n    <Router>\n      <div className=\"header\">\n        <nav>\n          <ul>\n            <li><Link to=\"/white\" onClick={navClickWhite} id={pathname === \"/white\" ? \"chosencolor\" : \"\"}>White</Link></li>\n            <li><Link to=\"/blue\" onClick={navClickBlue} id={pathname === \"/blue\" ? \"chosencolor\" : \"\"}>Blue</Link></li>\n          </ul>\n        </nav>\n      </div>\n      <div className=\"container\">\n        <div className=\"menuItem\">\n          <select className=\"mySelect\" id=\"mySelect\" onChange={e => clickImage(e.target.value - 1)}>\n            <option value=\"0\">Choose Background</option>\n            {imgArr ? imgArr.map((img, index) => <option value={index + 1}>{img.name}</option>) : null}\n          </select>\n        </div>\n        <div className=\"menuItem\">\n          <input id=\"input\" type=\"text\" name=\"name\" autoComplete=\"off\" onChange={e => textOnChange(e.target.value)} placeholder=\"Display Text\" />\n        </div>\n        <div className=\"menuItem\">\n          <select className=\"mySelect\" onChange={e => clickMode(e.target.value)}>\n            <option value=\"0\">Normal Mode</option>\n            <option value=\"1\">2/3 Mode</option>\n          </select>\n        </div>\n      </div>\n      <Switch>\n        <Route path=\"/white\">\n          <White />\n        </Route>\n        <Route path=\"/blue\">\n          <Blue />\n        </Route>\n      </Switch>\n    </Router >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}