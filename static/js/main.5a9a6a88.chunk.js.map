{"version":3,"sources":["pages/White.js","pages/Blue.js","App.js","reportWebVitals.js","index.js"],"names":["White","props","image","text","imageText","imageAlt","mode","className","src","alt","Blue","App","imgArr","useState","white","blue","color","setColor","setImage","setAlt","setText","setMode","resetSelectElement","selecElements","document","getElementsByClassName","selectedIndex","textOnChange","debounce","pathname","window","location","to","onClick","getElementById","value","id","onChange","e","imgInd","target","length","name","map","img","index","type","autoComplete","placeholder","modeInd","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5a9a6a88.chunk.js","sourcesContent":["function White(props) {\r\n    const image = props.image;\r\n    const text = props.imageText;\r\n    const imageAlt = props.imageAlt;\r\n    const mode = props.mode;\r\n\r\n    return (\r\n        <div className=\"imageBox\">\r\n            {image === \"\" ? null : (\r\n                <div className={`white canvas ${mode === \"1\" ? \"canvasMode23\" : \"\"}`}>\r\n                    <img src={image} alt={imageAlt} className={`${mode === \"1\" ? \"mode23\" : \"\"}`} />\r\n                    <div className={`imgText ${mode === \"1\" ? \"imgText23\" : \"\"}`}>{text}</div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default White;","function Blue(props) {\r\n    const image = props.image;\r\n    const text = props.imageText;\r\n    const imageAlt = props.imageAlt;\r\n    const mode = props.mode;\r\n\r\n    return (\r\n        <div className=\"imageBox\">\r\n            {image === \"\" ? null : (\r\n                <div className={`blue canvas ${mode === \"1\" ? \"canvasMode23\" : \"\"}`}>\r\n                    <img src={image} alt={imageAlt} className={`${mode === \"1\" ? \"mode23\" : \"\"}`} />\r\n                    <div className={`imgText ${mode === \"1\" ? \"imgText23\" : \"\"}`}>{text}</div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blue;","import './App.css';\nimport { Route, BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport White from './pages/White';\nimport Blue from './pages/Blue';\nimport { useState } from 'react';\nimport { debounce } from \"lodash\";\n\n// @TODO: add alt to img\n//        get imgArr from api\n\nfunction App() {\n  const imgArr = [\n    {\n      \"name\": \"Daisi\",\n      \"value\": \"https://bigvu-interviews-assets.s3.amazonaws.com/images/Daisi.png\"\n    },\n    {\n      \"name\": \"Shiri\",\n      \"value\": \"https://bigvu-interviews-assets.s3.amazonaws.com/images/Shiri.png\"\n    },\n    {\n      \"name\": \"Sarha\",\n      \"value\": \"https://bigvu-interviews-assets.s3.amazonaws.com/images/Sarha.png\"\n    },\n    {\n      \"name\": \"Rivka\",\n      \"value\": \"https://bigvu-interviews-assets.s3.amazonaws.com/images/Rivka.png\"\n    },\n    {\n      \"name\": \"Noa\",\n      \"value\": \"https://bigvu-interviews-assets.s3.amazonaws.com/images/Noa.png\"\n    },\n    {\n      \"name\": \"Erika\",\n      \"value\": \"https://bigvu-interviews-assets.s3.amazonaws.com/images/Erika.png\"\n    },\n    {\n      \"name\": \"Eli\",\n      \"value\": \"https://bigvu-interviews-assets.s3.amazonaws.com/images/Eli.png\"\n    }\n  ];\n\n  const [color, setColor] = useState({\n    white: false,\n    blue: false,\n  });\n  const [image, setImage] = useState(\"\");\n  const [alt, setAlt] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [mode, setMode] = useState(\"0\");\n\n  function navClickWhite() {\n    if (!color.white) {\n      setColor({\n        white: true,\n        blue: false,\n      });\n\n      setImage(\"\");\n      setMode(\"0\");\n      setAlt(\"\");\n      setText(\"\");\n      document.getElementById(\"input\").value = \"\";\n      resetSelectElement();\n    }\n  }\n\n  function navClickBlue() {\n    if (!color.blue) {\n      setColor({\n        white: false,\n        blue: true,\n      })\n\n      setImage(\"\");\n      setMode(\"0\");\n      setAlt(\"\");\n      setText(\"\");\n      document.getElementById(\"input\").value = \"\";\n      resetSelectElement();\n    }\n  }\n\n  function clickImage(imgInd) {\n    if (imgInd < imgArr.length && imgInd >= 0) {\n      setImage(imgArr[imgInd].value);\n      setAlt(imgArr[imgInd].name);\n    }\n  }\n\n  function resetSelectElement() {\n    let selecElements = document.getElementsByClassName(\"mySelect\");\n    if (selecElements[0].selectedIndex !== 0) {\n      selecElements[0].selectedIndex = 0;\n    }\n    selecElements[1].selectedIndex = \"0\";\n\n  }\n\n  function clickMode(modeInd) {\n    if (modeInd === \"0\") setMode(\"0\");\n    if (modeInd === \"1\") setMode(\"1\");\n  }\n\n  const textOnChange = debounce(text => { setText(text) }, 500);\n\n  const pathname = window.location.pathname;\n\n  return (\n    <Router>\n      <div className=\"header\">\n        <nav>\n          <ul>\n            <li><Link to=\"/white\" onClick={navClickWhite} id={pathname === \"/white\" ? \"chosencolor\" : \"\"}>White</Link></li>\n            <li><Link to=\"/blue\" onClick={navClickBlue} id={pathname === \"/blue\" ? \"chosencolor\" : \"\"}>Blue</Link></li>\n          </ul>\n        </nav>\n      </div>\n      <div className=\"container\">\n        <div className=\"menuItem\">\n          <select className=\"mySelect\" id=\"mySelect\" onChange={e => clickImage(e.target.value - 1)}>\n            <option value=\"0\">Choose Background</option>\n            {imgArr.map((img, index) => <option value={index + 1}>{img.name}</option>)}\n          </select>\n        </div>\n        <div className=\"menuItem\">\n          <input id=\"input\" type=\"text\" name=\"name\" autoComplete=\"off\" onChange={e => textOnChange(e.target.value)} placeholder=\"Display Text\" />\n        </div>\n        <div className=\"menuItem\">\n          <select className=\"mySelect\" onChange={e => clickMode(e.target.value)}>\n            <option value=\"0\">Normal Mode</option>\n            <option value=\"1\">2/3 Mode</option>\n          </select>\n        </div>\n      </div>\n      <Switch>\n        <Route path=\"/white\">\n          <White image={image} imageText={text} imageAlt={alt} mode={mode} />\n        </Route>\n        <Route path=\"/blue\">\n          <Blue image={image} imageText={text} imageAlt={alt} mode={mode} />\n        </Route>\n      </Switch>\n    </Router >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}